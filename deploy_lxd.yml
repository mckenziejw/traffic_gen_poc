---
- name: Install dependencies
  hosts: lxd_hosts
  tasks:
  - name: Install Apt packages
    apt:
      update_cache: true
      pkg:
      - snap
      - debootstrap
      state: latest
    become: true 
  - name: Install LXD Snap
    community.general.snap:
      name: lxd
      state: present
    become: true
  - name: Install LXD Snap
    community.general.snap:
      name: distrobuilder
      state: present
      classic: true
    become: true
  - name: Add lab to lxc group
    user:
      name: lab
      groups: lxd
      append: yes
    become: true
  - name: Copy preseed file
    copy:
      src: lxd_preseed.yml
      dest: lxd_preseed.yml
      owner: lab
      mode: u=rw,g=ro=r
  - name: Bootstrap LXD
    raw: cat lxd_preseed.yml | lxd init --preseed
    become: true
  - name: download traffic_gen_poc
    git:
      repo: 'https://github.com/mckenziejw/traffic_gen_poc'
      dest: '/home/lab/traffic_gen_poc'
  # - name: Build Terraform plan 1
  #   set_fact:
  #       wlans:
  #         onboard: "{{wlans.onboard + [{'name': item}]}}"
  #         usb: "{{wlans.usb}}"
  #   loop: "{{ansible_interfaces}}"
  #   when: item | regex_search("^wlp[a-zA-Z0-9]*")
  # - name: Build Terraform plan 2
  #   set_fact:
  #       wlans:
  #         onboard: "{{wlans.onboard}}"
  #         usb: "{{wlans.usb + [{'name': item}]}}"
  #   loop: "{{ansible_interfaces}}"
  #   when: item | regex_search("^wlx[a-zA-Z0-9]*")
  # - name: debug
  #   debug:
  #     var: wlans
  # - name: Build template
  #   template:
  #     src: templates/main.tf.j2
  #     dest: main.tf
  #   delegate_to: localhost
  # - name: Create netplan
  #   command: python3 /home/lab/traffic_gen_poc/build_netplan.py
  #   become: true
#  - name: reboot
#    reboot:
#    become: true

# - name: Configure wired hosts
#   hosts: wired_hosts
#   vars:
#     - ansible_become_password: lab123

#   tasks:
#   - 


# - name: Build IoT client LXD image
#   hosts: lxd_hosts

#   tasks:
#   - name: Download Alpine rootfs
#     get_url:
#       url: https://dl-cdn.alpinelinux.org/alpine/v3.20/releases/x86_64/alpine-minirootfs-3.20.0-x86_64.tar.gz
#       dest: /home/lab/alpine-rootfs.tar.gz
#       mode: '0440'
#   - name: Extract rootfs
#     unarchive:
#       src: /home/lab/alpine-rootfs.tar.gz
#       dest: /home/lab/alpine-rootfs
#   - name: Deploy the chroot/container prep script
#     copy:
#       content: |
#         #!/usr/bin/env /bin/ash
#         export PATH=/bin:/usr/bin:/sbin
#         apk update
#         apk add --no-cache python3 findmnt curl libcap bind-tools wireless-tools wpa_supplicant